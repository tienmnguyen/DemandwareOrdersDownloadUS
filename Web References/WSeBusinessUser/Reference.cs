//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1008.
// 
#pragma warning disable 1591

namespace DemandwareDownload.WSeBusinessUser {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DRMeBusinessUserSoap", Namespace="http://dermalogica.com/webservices/")]
    public partial class DRMeBusinessUser : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AuthenticateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerLookupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDermDollarHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDermDollarDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBCCounterOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBCReferralSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTermsConditionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyAccountStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveB2BRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveB2BRequestByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveBCEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyB2BProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveE2WUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveE2WUserByAn8OperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateE2WUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateNetTermsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBCUsersByAN8OperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatetB2BRequestEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertB2BRequestToERPOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertB2BRequestEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEncryptedPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBCUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertB2CRequestEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertB2CRequestEntry_ssOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveB2CRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveB2CRequestByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatetB2CRequestEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyB2CProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyB2CProfileByAn8ProdOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAffiliateRequestEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyAffiliateProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyAffiliateProfileByAn8ProdOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAffiliateRequestEntry_ssOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyAffiliateProfile_SSOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyAffiliateProfileByAn8Prod_SSOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatetAffiliateRequestEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveAffiliateRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_SalonServ_BusinessCenterOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_SalonServ_BusinessCenterOperationCompleted;
        
        private System.Threading.SendOrPostCallback Retrieve_SalonServ_BusinessCenterOperationCompleted;
        
        private System.Threading.SendOrPostCallback Retrieve_SalonServ_CustMasterOperationCompleted;
        
        private System.Threading.SendOrPostCallback Retrieve_SalonServ_BusinessCenter_EmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback Retrieve_SalonServ_BusinessCenter_Email_PasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_SalonServices_BusinessCenter_CounterOperationCompleted;
        
        private System.Threading.SendOrPostCallback Retrieve_Payterms_ExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertPayTermsRequestEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyPayTermsProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatetPayTermsRequestEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrievePayTermsRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOwnerOperationCompleted;
        
        private System.Threading.SendOrPostCallback AcceptPayTermsApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback Add_ID_OutOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerPhoneLookupOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticateDermEduOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPasswordDermEduOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertEventDirectoryEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveEventDirectoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveEventDirectoryByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveDermCircleBannerOperationCompleted;
        
        private System.Threading.SendOrPostCallback EncryptCryptoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DecryptCryptoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DRMeBusinessUser() {
            this.Url = global::DemandwareDownload.Properties.Settings.Default.DemandwareDownload_WSeBusinessUser_DRMeBusinessUser;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AuthenticateCompletedEventHandler AuthenticateCompleted;
        
        /// <remarks/>
        public event CustomerLookupCompletedEventHandler CustomerLookupCompleted;
        
        /// <remarks/>
        public event GetCompletedEventHandler GetCompleted;
        
        /// <remarks/>
        public event GetUserIdCompletedEventHandler GetUserIdCompleted;
        
        /// <remarks/>
        public event AddCompletedEventHandler AddCompleted;
        
        /// <remarks/>
        public event UpdateCompletedEventHandler UpdateCompleted;
        
        /// <remarks/>
        public event GetPasswordCompletedEventHandler GetPasswordCompleted;
        
        /// <remarks/>
        public event GetDermDollarHeaderCompletedEventHandler GetDermDollarHeaderCompleted;
        
        /// <remarks/>
        public event GetDermDollarDetailCompletedEventHandler GetDermDollarDetailCompleted;
        
        /// <remarks/>
        public event GetAccountAddressCompletedEventHandler GetAccountAddressCompleted;
        
        /// <remarks/>
        public event UpdateBCCounterCompletedEventHandler UpdateBCCounterCompleted;
        
        /// <remarks/>
        public event UpdateBCReferralSiteCompletedEventHandler UpdateBCReferralSiteCompleted;
        
        /// <remarks/>
        public event UpdateTermsConditionsCompletedEventHandler UpdateTermsConditionsCompleted;
        
        /// <remarks/>
        public event VerifyAccountStatusCompletedEventHandler VerifyAccountStatusCompleted;
        
        /// <remarks/>
        public event RetrieveB2BRequestCompletedEventHandler RetrieveB2BRequestCompleted;
        
        /// <remarks/>
        public event RetrieveB2BRequestByEmailCompletedEventHandler RetrieveB2BRequestByEmailCompleted;
        
        /// <remarks/>
        public event RetrieveBCEmailCompletedEventHandler RetrieveBCEmailCompleted;
        
        /// <remarks/>
        public event VerifyB2BProfileCompletedEventHandler VerifyB2BProfileCompleted;
        
        /// <remarks/>
        public event RetrieveE2WUserCompletedEventHandler RetrieveE2WUserCompleted;
        
        /// <remarks/>
        public event RetrieveE2WUserByAn8CompletedEventHandler RetrieveE2WUserByAn8Completed;
        
        /// <remarks/>
        public event UpdateE2WUserCompletedEventHandler UpdateE2WUserCompleted;
        
        /// <remarks/>
        public event UpdateNetTermsCompletedEventHandler UpdateNetTermsCompleted;
        
        /// <remarks/>
        public event GetBCUsersByAN8CompletedEventHandler GetBCUsersByAN8Completed;
        
        /// <remarks/>
        public event UpdatetB2BRequestEntryCompletedEventHandler UpdatetB2BRequestEntryCompleted;
        
        /// <remarks/>
        public event InsertB2BRequestToERPCompletedEventHandler InsertB2BRequestToERPCompleted;
        
        /// <remarks/>
        public event InsertB2BRequestEntryCompletedEventHandler InsertB2BRequestEntryCompleted;
        
        /// <remarks/>
        public event UpdateEncryptedPasswordCompletedEventHandler UpdateEncryptedPasswordCompleted;
        
        /// <remarks/>
        public event GetBCUsersCompletedEventHandler GetBCUsersCompleted;
        
        /// <remarks/>
        public event InsertB2CRequestEntryCompletedEventHandler InsertB2CRequestEntryCompleted;
        
        /// <remarks/>
        public event InsertB2CRequestEntry_ssCompletedEventHandler InsertB2CRequestEntry_ssCompleted;
        
        /// <remarks/>
        public event RetrieveB2CRequestCompletedEventHandler RetrieveB2CRequestCompleted;
        
        /// <remarks/>
        public event RetrieveB2CRequestByEmailCompletedEventHandler RetrieveB2CRequestByEmailCompleted;
        
        /// <remarks/>
        public event UpdatetB2CRequestEntryCompletedEventHandler UpdatetB2CRequestEntryCompleted;
        
        /// <remarks/>
        public event VerifyB2CProfileCompletedEventHandler VerifyB2CProfileCompleted;
        
        /// <remarks/>
        public event VerifyB2CProfileByAn8ProdCompletedEventHandler VerifyB2CProfileByAn8ProdCompleted;
        
        /// <remarks/>
        public event InsertAffiliateRequestEntryCompletedEventHandler InsertAffiliateRequestEntryCompleted;
        
        /// <remarks/>
        public event VerifyAffiliateProfileCompletedEventHandler VerifyAffiliateProfileCompleted;
        
        /// <remarks/>
        public event VerifyAffiliateProfileByAn8ProdCompletedEventHandler VerifyAffiliateProfileByAn8ProdCompleted;
        
        /// <remarks/>
        public event InsertAffiliateRequestEntry_ssCompletedEventHandler InsertAffiliateRequestEntry_ssCompleted;
        
        /// <remarks/>
        public event VerifyAffiliateProfile_SSCompletedEventHandler VerifyAffiliateProfile_SSCompleted;
        
        /// <remarks/>
        public event VerifyAffiliateProfileByAn8Prod_SSCompletedEventHandler VerifyAffiliateProfileByAn8Prod_SSCompleted;
        
        /// <remarks/>
        public event UpdatetAffiliateRequestEntryCompletedEventHandler UpdatetAffiliateRequestEntryCompleted;
        
        /// <remarks/>
        public event RetrieveAffiliateRequestCompletedEventHandler RetrieveAffiliateRequestCompleted;
        
        /// <remarks/>
        public event Insert_SalonServ_BusinessCenterCompletedEventHandler Insert_SalonServ_BusinessCenterCompleted;
        
        /// <remarks/>
        public event Update_SalonServ_BusinessCenterCompletedEventHandler Update_SalonServ_BusinessCenterCompleted;
        
        /// <remarks/>
        public event Retrieve_SalonServ_BusinessCenterCompletedEventHandler Retrieve_SalonServ_BusinessCenterCompleted;
        
        /// <remarks/>
        public event Retrieve_SalonServ_CustMasterCompletedEventHandler Retrieve_SalonServ_CustMasterCompleted;
        
        /// <remarks/>
        public event Retrieve_SalonServ_BusinessCenter_EmailCompletedEventHandler Retrieve_SalonServ_BusinessCenter_EmailCompleted;
        
        /// <remarks/>
        public event Retrieve_SalonServ_BusinessCenter_Email_PasswordCompletedEventHandler Retrieve_SalonServ_BusinessCenter_Email_PasswordCompleted;
        
        /// <remarks/>
        public event Update_SalonServices_BusinessCenter_CounterCompletedEventHandler Update_SalonServices_BusinessCenter_CounterCompleted;
        
        /// <remarks/>
        public event Retrieve_Payterms_ExistCompletedEventHandler Retrieve_Payterms_ExistCompleted;
        
        /// <remarks/>
        public event InsertPayTermsRequestEntryCompletedEventHandler InsertPayTermsRequestEntryCompleted;
        
        /// <remarks/>
        public event VerifyPayTermsProfileCompletedEventHandler VerifyPayTermsProfileCompleted;
        
        /// <remarks/>
        public event UpdatetPayTermsRequestEntryCompletedEventHandler UpdatetPayTermsRequestEntryCompleted;
        
        /// <remarks/>
        public event RetrievePayTermsRequestCompletedEventHandler RetrievePayTermsRequestCompleted;
        
        /// <remarks/>
        public event GetOwnerCompletedEventHandler GetOwnerCompleted;
        
        /// <remarks/>
        public event AcceptPayTermsApprovalCompletedEventHandler AcceptPayTermsApprovalCompleted;
        
        /// <remarks/>
        public event Add_ID_OutCompletedEventHandler Add_ID_OutCompleted;
        
        /// <remarks/>
        public event CustomerPhoneLookupCompletedEventHandler CustomerPhoneLookupCompleted;
        
        /// <remarks/>
        public event AuthenticateDermEduCompletedEventHandler AuthenticateDermEduCompleted;
        
        /// <remarks/>
        public event GetPasswordDermEduCompletedEventHandler GetPasswordDermEduCompleted;
        
        /// <remarks/>
        public event InsertEventDirectoryEntryCompletedEventHandler InsertEventDirectoryEntryCompleted;
        
        /// <remarks/>
        public event RetrieveEventDirectoryCompletedEventHandler RetrieveEventDirectoryCompleted;
        
        /// <remarks/>
        public event RetrieveEventDirectoryByIDCompletedEventHandler RetrieveEventDirectoryByIDCompleted;
        
        /// <remarks/>
        public event RetrieveDermCircleBannerCompletedEventHandler RetrieveDermCircleBannerCompleted;
        
        /// <remarks/>
        public event EncryptCryptoCompletedEventHandler EncryptCryptoCompleted;
        
        /// <remarks/>
        public event DecryptCryptoCompletedEventHandler DecryptCryptoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/Authenticate", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Authenticate(string UserID, string Password) {
            object[] results = this.Invoke("Authenticate", new object[] {
                        UserID,
                        Password});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateAsync(string UserID, string Password) {
            this.AuthenticateAsync(UserID, Password, null);
        }
        
        /// <remarks/>
        public void AuthenticateAsync(string UserID, string Password, object userState) {
            if ((this.AuthenticateOperationCompleted == null)) {
                this.AuthenticateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateOperationCompleted);
            }
            this.InvokeAsync("Authenticate", new object[] {
                        UserID,
                        Password}, this.AuthenticateOperationCompleted, userState);
        }
        
        private void OnAuthenticateOperationCompleted(object arg) {
            if ((this.AuthenticateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateCompleted(this, new AuthenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/CustomerLookup", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CustomerLookup(decimal AddressBookNo) {
            object[] results = this.Invoke("CustomerLookup", new object[] {
                        AddressBookNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CustomerLookupAsync(decimal AddressBookNo) {
            this.CustomerLookupAsync(AddressBookNo, null);
        }
        
        /// <remarks/>
        public void CustomerLookupAsync(decimal AddressBookNo, object userState) {
            if ((this.CustomerLookupOperationCompleted == null)) {
                this.CustomerLookupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerLookupOperationCompleted);
            }
            this.InvokeAsync("CustomerLookup", new object[] {
                        AddressBookNo}, this.CustomerLookupOperationCompleted, userState);
        }
        
        private void OnCustomerLookupOperationCompleted(object arg) {
            if ((this.CustomerLookupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerLookupCompleted(this, new CustomerLookupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/Get", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get(int ContactStagingID) {
            object[] results = this.Invoke("Get", new object[] {
                        ContactStagingID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAsync(int ContactStagingID) {
            this.GetAsync(ContactStagingID, null);
        }
        
        /// <remarks/>
        public void GetAsync(int ContactStagingID, object userState) {
            if ((this.GetOperationCompleted == null)) {
                this.GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperationCompleted);
            }
            this.InvokeAsync("Get", new object[] {
                        ContactStagingID}, this.GetOperationCompleted, userState);
        }
        
        private void OnGetOperationCompleted(object arg) {
            if ((this.GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompleted(this, new GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/GetUserId", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserId(string email, int account_no) {
            object[] results = this.Invoke("GetUserId", new object[] {
                        email,
                        account_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserIdAsync(string email, int account_no) {
            this.GetUserIdAsync(email, account_no, null);
        }
        
        /// <remarks/>
        public void GetUserIdAsync(string email, int account_no, object userState) {
            if ((this.GetUserIdOperationCompleted == null)) {
                this.GetUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserIdOperationCompleted);
            }
            this.InvokeAsync("GetUserId", new object[] {
                        email,
                        account_no}, this.GetUserIdOperationCompleted, userState);
        }
        
        private void OnGetUserIdOperationCompleted(object arg) {
            if ((this.GetUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserIdCompleted(this, new GetUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/Add", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Add(int StagingContactID, int CustSkey, string Salutation, string ContactType, string NmFirst, string NmLast, string CityAreaCode, string LocalPhone, string PhoneExt, string EmailAddress, string UserID, string Password, string terms) {
            this.Invoke("Add", new object[] {
                        StagingContactID,
                        CustSkey,
                        Salutation,
                        ContactType,
                        NmFirst,
                        NmLast,
                        CityAreaCode,
                        LocalPhone,
                        PhoneExt,
                        EmailAddress,
                        UserID,
                        Password,
                        terms});
        }
        
        /// <remarks/>
        public void AddAsync(int StagingContactID, int CustSkey, string Salutation, string ContactType, string NmFirst, string NmLast, string CityAreaCode, string LocalPhone, string PhoneExt, string EmailAddress, string UserID, string Password, string terms) {
            this.AddAsync(StagingContactID, CustSkey, Salutation, ContactType, NmFirst, NmLast, CityAreaCode, LocalPhone, PhoneExt, EmailAddress, UserID, Password, terms, null);
        }
        
        /// <remarks/>
        public void AddAsync(int StagingContactID, int CustSkey, string Salutation, string ContactType, string NmFirst, string NmLast, string CityAreaCode, string LocalPhone, string PhoneExt, string EmailAddress, string UserID, string Password, string terms, object userState) {
            if ((this.AddOperationCompleted == null)) {
                this.AddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOperationCompleted);
            }
            this.InvokeAsync("Add", new object[] {
                        StagingContactID,
                        CustSkey,
                        Salutation,
                        ContactType,
                        NmFirst,
                        NmLast,
                        CityAreaCode,
                        LocalPhone,
                        PhoneExt,
                        EmailAddress,
                        UserID,
                        Password,
                        terms}, this.AddOperationCompleted, userState);
        }
        
        private void OnAddOperationCompleted(object arg) {
            if ((this.AddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/Update", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update(int StagingContactID, int CustSkey, string Salutation, string ContactType, string NmFirst, string NmLast, string CityAreaCode, string LocalPhone, string PhoneExt, string EmailAddress, string UserID, string Password, string terms) {
            this.Invoke("Update", new object[] {
                        StagingContactID,
                        CustSkey,
                        Salutation,
                        ContactType,
                        NmFirst,
                        NmLast,
                        CityAreaCode,
                        LocalPhone,
                        PhoneExt,
                        EmailAddress,
                        UserID,
                        Password,
                        terms});
        }
        
        /// <remarks/>
        public void UpdateAsync(int StagingContactID, int CustSkey, string Salutation, string ContactType, string NmFirst, string NmLast, string CityAreaCode, string LocalPhone, string PhoneExt, string EmailAddress, string UserID, string Password, string terms) {
            this.UpdateAsync(StagingContactID, CustSkey, Salutation, ContactType, NmFirst, NmLast, CityAreaCode, LocalPhone, PhoneExt, EmailAddress, UserID, Password, terms, null);
        }
        
        /// <remarks/>
        public void UpdateAsync(int StagingContactID, int CustSkey, string Salutation, string ContactType, string NmFirst, string NmLast, string CityAreaCode, string LocalPhone, string PhoneExt, string EmailAddress, string UserID, string Password, string terms, object userState) {
            if ((this.UpdateOperationCompleted == null)) {
                this.UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOperationCompleted);
            }
            this.InvokeAsync("Update", new object[] {
                        StagingContactID,
                        CustSkey,
                        Salutation,
                        ContactType,
                        NmFirst,
                        NmLast,
                        CityAreaCode,
                        LocalPhone,
                        PhoneExt,
                        EmailAddress,
                        UserID,
                        Password,
                        terms}, this.UpdateOperationCompleted, userState);
        }
        
        private void OnUpdateOperationCompleted(object arg) {
            if ((this.UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/GetPassword", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPassword(string UserID) {
            object[] results = this.Invoke("GetPassword", new object[] {
                        UserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPasswordAsync(string UserID) {
            this.GetPasswordAsync(UserID, null);
        }
        
        /// <remarks/>
        public void GetPasswordAsync(string UserID, object userState) {
            if ((this.GetPasswordOperationCompleted == null)) {
                this.GetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPasswordOperationCompleted);
            }
            this.InvokeAsync("GetPassword", new object[] {
                        UserID}, this.GetPasswordOperationCompleted, userState);
        }
        
        private void OnGetPasswordOperationCompleted(object arg) {
            if ((this.GetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPasswordCompleted(this, new GetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/GetDermDollarHeader", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDermDollarHeader(int address_book_no) {
            object[] results = this.Invoke("GetDermDollarHeader", new object[] {
                        address_book_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDermDollarHeaderAsync(int address_book_no) {
            this.GetDermDollarHeaderAsync(address_book_no, null);
        }
        
        /// <remarks/>
        public void GetDermDollarHeaderAsync(int address_book_no, object userState) {
            if ((this.GetDermDollarHeaderOperationCompleted == null)) {
                this.GetDermDollarHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDermDollarHeaderOperationCompleted);
            }
            this.InvokeAsync("GetDermDollarHeader", new object[] {
                        address_book_no}, this.GetDermDollarHeaderOperationCompleted, userState);
        }
        
        private void OnGetDermDollarHeaderOperationCompleted(object arg) {
            if ((this.GetDermDollarHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDermDollarHeaderCompleted(this, new GetDermDollarHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/GetDermDollarDetail", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDermDollarDetail(int address_book_no) {
            object[] results = this.Invoke("GetDermDollarDetail", new object[] {
                        address_book_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDermDollarDetailAsync(int address_book_no) {
            this.GetDermDollarDetailAsync(address_book_no, null);
        }
        
        /// <remarks/>
        public void GetDermDollarDetailAsync(int address_book_no, object userState) {
            if ((this.GetDermDollarDetailOperationCompleted == null)) {
                this.GetDermDollarDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDermDollarDetailOperationCompleted);
            }
            this.InvokeAsync("GetDermDollarDetail", new object[] {
                        address_book_no}, this.GetDermDollarDetailOperationCompleted, userState);
        }
        
        private void OnGetDermDollarDetailOperationCompleted(object arg) {
            if ((this.GetDermDollarDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDermDollarDetailCompleted(this, new GetDermDollarDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/GetAccountAddress", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAccountAddress(int address_book_no) {
            object[] results = this.Invoke("GetAccountAddress", new object[] {
                        address_book_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountAddressAsync(int address_book_no) {
            this.GetAccountAddressAsync(address_book_no, null);
        }
        
        /// <remarks/>
        public void GetAccountAddressAsync(int address_book_no, object userState) {
            if ((this.GetAccountAddressOperationCompleted == null)) {
                this.GetAccountAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountAddressOperationCompleted);
            }
            this.InvokeAsync("GetAccountAddress", new object[] {
                        address_book_no}, this.GetAccountAddressOperationCompleted, userState);
        }
        
        private void OnGetAccountAddressOperationCompleted(object arg) {
            if ((this.GetAccountAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountAddressCompleted(this, new GetAccountAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/UpdateBCCounter", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateBCCounter(int StagingContactID) {
            this.Invoke("UpdateBCCounter", new object[] {
                        StagingContactID});
        }
        
        /// <remarks/>
        public void UpdateBCCounterAsync(int StagingContactID) {
            this.UpdateBCCounterAsync(StagingContactID, null);
        }
        
        /// <remarks/>
        public void UpdateBCCounterAsync(int StagingContactID, object userState) {
            if ((this.UpdateBCCounterOperationCompleted == null)) {
                this.UpdateBCCounterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBCCounterOperationCompleted);
            }
            this.InvokeAsync("UpdateBCCounter", new object[] {
                        StagingContactID}, this.UpdateBCCounterOperationCompleted, userState);
        }
        
        private void OnUpdateBCCounterOperationCompleted(object arg) {
            if ((this.UpdateBCCounterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBCCounterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/UpdateBCReferralSite", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateBCReferralSite(int StagingContactID, string Referral) {
            this.Invoke("UpdateBCReferralSite", new object[] {
                        StagingContactID,
                        Referral});
        }
        
        /// <remarks/>
        public void UpdateBCReferralSiteAsync(int StagingContactID, string Referral) {
            this.UpdateBCReferralSiteAsync(StagingContactID, Referral, null);
        }
        
        /// <remarks/>
        public void UpdateBCReferralSiteAsync(int StagingContactID, string Referral, object userState) {
            if ((this.UpdateBCReferralSiteOperationCompleted == null)) {
                this.UpdateBCReferralSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBCReferralSiteOperationCompleted);
            }
            this.InvokeAsync("UpdateBCReferralSite", new object[] {
                        StagingContactID,
                        Referral}, this.UpdateBCReferralSiteOperationCompleted, userState);
        }
        
        private void OnUpdateBCReferralSiteOperationCompleted(object arg) {
            if ((this.UpdateBCReferralSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBCReferralSiteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/UpdateTermsConditions", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateTermsConditions(int StagingContactID, string Terms) {
            this.Invoke("UpdateTermsConditions", new object[] {
                        StagingContactID,
                        Terms});
        }
        
        /// <remarks/>
        public void UpdateTermsConditionsAsync(int StagingContactID, string Terms) {
            this.UpdateTermsConditionsAsync(StagingContactID, Terms, null);
        }
        
        /// <remarks/>
        public void UpdateTermsConditionsAsync(int StagingContactID, string Terms, object userState) {
            if ((this.UpdateTermsConditionsOperationCompleted == null)) {
                this.UpdateTermsConditionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTermsConditionsOperationCompleted);
            }
            this.InvokeAsync("UpdateTermsConditions", new object[] {
                        StagingContactID,
                        Terms}, this.UpdateTermsConditionsOperationCompleted, userState);
        }
        
        private void OnUpdateTermsConditionsOperationCompleted(object arg) {
            if ((this.UpdateTermsConditionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTermsConditionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/VerifyAccountStatus", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet VerifyAccountStatus(int address_book_no) {
            object[] results = this.Invoke("VerifyAccountStatus", new object[] {
                        address_book_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyAccountStatusAsync(int address_book_no) {
            this.VerifyAccountStatusAsync(address_book_no, null);
        }
        
        /// <remarks/>
        public void VerifyAccountStatusAsync(int address_book_no, object userState) {
            if ((this.VerifyAccountStatusOperationCompleted == null)) {
                this.VerifyAccountStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyAccountStatusOperationCompleted);
            }
            this.InvokeAsync("VerifyAccountStatus", new object[] {
                        address_book_no}, this.VerifyAccountStatusOperationCompleted, userState);
        }
        
        private void OnVerifyAccountStatusOperationCompleted(object arg) {
            if ((this.VerifyAccountStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyAccountStatusCompleted(this, new VerifyAccountStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/RetrieveB2BRequest", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveB2BRequest(int request_id) {
            object[] results = this.Invoke("RetrieveB2BRequest", new object[] {
                        request_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveB2BRequestAsync(int request_id) {
            this.RetrieveB2BRequestAsync(request_id, null);
        }
        
        /// <remarks/>
        public void RetrieveB2BRequestAsync(int request_id, object userState) {
            if ((this.RetrieveB2BRequestOperationCompleted == null)) {
                this.RetrieveB2BRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveB2BRequestOperationCompleted);
            }
            this.InvokeAsync("RetrieveB2BRequest", new object[] {
                        request_id}, this.RetrieveB2BRequestOperationCompleted, userState);
        }
        
        private void OnRetrieveB2BRequestOperationCompleted(object arg) {
            if ((this.RetrieveB2BRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveB2BRequestCompleted(this, new RetrieveB2BRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/RetrieveB2BRequestByEmail", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveB2BRequestByEmail(string email, int account_no) {
            object[] results = this.Invoke("RetrieveB2BRequestByEmail", new object[] {
                        email,
                        account_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveB2BRequestByEmailAsync(string email, int account_no) {
            this.RetrieveB2BRequestByEmailAsync(email, account_no, null);
        }
        
        /// <remarks/>
        public void RetrieveB2BRequestByEmailAsync(string email, int account_no, object userState) {
            if ((this.RetrieveB2BRequestByEmailOperationCompleted == null)) {
                this.RetrieveB2BRequestByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveB2BRequestByEmailOperationCompleted);
            }
            this.InvokeAsync("RetrieveB2BRequestByEmail", new object[] {
                        email,
                        account_no}, this.RetrieveB2BRequestByEmailOperationCompleted, userState);
        }
        
        private void OnRetrieveB2BRequestByEmailOperationCompleted(object arg) {
            if ((this.RetrieveB2BRequestByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveB2BRequestByEmailCompleted(this, new RetrieveB2BRequestByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/RetrieveBCEmail", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveBCEmail(int account_no) {
            object[] results = this.Invoke("RetrieveBCEmail", new object[] {
                        account_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveBCEmailAsync(int account_no) {
            this.RetrieveBCEmailAsync(account_no, null);
        }
        
        /// <remarks/>
        public void RetrieveBCEmailAsync(int account_no, object userState) {
            if ((this.RetrieveBCEmailOperationCompleted == null)) {
                this.RetrieveBCEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveBCEmailOperationCompleted);
            }
            this.InvokeAsync("RetrieveBCEmail", new object[] {
                        account_no}, this.RetrieveBCEmailOperationCompleted, userState);
        }
        
        private void OnRetrieveBCEmailOperationCompleted(object arg) {
            if ((this.RetrieveBCEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveBCEmailCompleted(this, new RetrieveBCEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/VerifyB2BProfile", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet VerifyB2BProfile(int account_no) {
            object[] results = this.Invoke("VerifyB2BProfile", new object[] {
                        account_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyB2BProfileAsync(int account_no) {
            this.VerifyB2BProfileAsync(account_no, null);
        }
        
        /// <remarks/>
        public void VerifyB2BProfileAsync(int account_no, object userState) {
            if ((this.VerifyB2BProfileOperationCompleted == null)) {
                this.VerifyB2BProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyB2BProfileOperationCompleted);
            }
            this.InvokeAsync("VerifyB2BProfile", new object[] {
                        account_no}, this.VerifyB2BProfileOperationCompleted, userState);
        }
        
        private void OnVerifyB2BProfileOperationCompleted(object arg) {
            if ((this.VerifyB2BProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyB2BProfileCompleted(this, new VerifyB2BProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/RetrieveE2WUser", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveE2WUser(string email, int account_no) {
            object[] results = this.Invoke("RetrieveE2WUser", new object[] {
                        email,
                        account_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveE2WUserAsync(string email, int account_no) {
            this.RetrieveE2WUserAsync(email, account_no, null);
        }
        
        /// <remarks/>
        public void RetrieveE2WUserAsync(string email, int account_no, object userState) {
            if ((this.RetrieveE2WUserOperationCompleted == null)) {
                this.RetrieveE2WUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveE2WUserOperationCompleted);
            }
            this.InvokeAsync("RetrieveE2WUser", new object[] {
                        email,
                        account_no}, this.RetrieveE2WUserOperationCompleted, userState);
        }
        
        private void OnRetrieveE2WUserOperationCompleted(object arg) {
            if ((this.RetrieveE2WUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveE2WUserCompleted(this, new RetrieveE2WUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/RetrieveE2WUserByAn8", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveE2WUserByAn8(int account_no) {
            object[] results = this.Invoke("RetrieveE2WUserByAn8", new object[] {
                        account_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveE2WUserByAn8Async(int account_no) {
            this.RetrieveE2WUserByAn8Async(account_no, null);
        }
        
        /// <remarks/>
        public void RetrieveE2WUserByAn8Async(int account_no, object userState) {
            if ((this.RetrieveE2WUserByAn8OperationCompleted == null)) {
                this.RetrieveE2WUserByAn8OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveE2WUserByAn8OperationCompleted);
            }
            this.InvokeAsync("RetrieveE2WUserByAn8", new object[] {
                        account_no}, this.RetrieveE2WUserByAn8OperationCompleted, userState);
        }
        
        private void OnRetrieveE2WUserByAn8OperationCompleted(object arg) {
            if ((this.RetrieveE2WUserByAn8Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveE2WUserByAn8Completed(this, new RetrieveE2WUserByAn8CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/UpdateE2WUser", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpdateE2WUser(string email_old, string email_new) {
            object[] results = this.Invoke("UpdateE2WUser", new object[] {
                        email_old,
                        email_new});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateE2WUserAsync(string email_old, string email_new) {
            this.UpdateE2WUserAsync(email_old, email_new, null);
        }
        
        /// <remarks/>
        public void UpdateE2WUserAsync(string email_old, string email_new, object userState) {
            if ((this.UpdateE2WUserOperationCompleted == null)) {
                this.UpdateE2WUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateE2WUserOperationCompleted);
            }
            this.InvokeAsync("UpdateE2WUser", new object[] {
                        email_old,
                        email_new}, this.UpdateE2WUserOperationCompleted, userState);
        }
        
        private void OnUpdateE2WUserOperationCompleted(object arg) {
            if ((this.UpdateE2WUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateE2WUserCompleted(this, new UpdateE2WUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/UpdateNetTerms", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpdateNetTerms(string an8, string flag) {
            object[] results = this.Invoke("UpdateNetTerms", new object[] {
                        an8,
                        flag});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateNetTermsAsync(string an8, string flag) {
            this.UpdateNetTermsAsync(an8, flag, null);
        }
        
        /// <remarks/>
        public void UpdateNetTermsAsync(string an8, string flag, object userState) {
            if ((this.UpdateNetTermsOperationCompleted == null)) {
                this.UpdateNetTermsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateNetTermsOperationCompleted);
            }
            this.InvokeAsync("UpdateNetTerms", new object[] {
                        an8,
                        flag}, this.UpdateNetTermsOperationCompleted, userState);
        }
        
        private void OnUpdateNetTermsOperationCompleted(object arg) {
            if ((this.UpdateNetTermsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateNetTermsCompleted(this, new UpdateNetTermsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/GetBCUsersByAN8", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBCUsersByAN8(int address_book_no) {
            object[] results = this.Invoke("GetBCUsersByAN8", new object[] {
                        address_book_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBCUsersByAN8Async(int address_book_no) {
            this.GetBCUsersByAN8Async(address_book_no, null);
        }
        
        /// <remarks/>
        public void GetBCUsersByAN8Async(int address_book_no, object userState) {
            if ((this.GetBCUsersByAN8OperationCompleted == null)) {
                this.GetBCUsersByAN8OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBCUsersByAN8OperationCompleted);
            }
            this.InvokeAsync("GetBCUsersByAN8", new object[] {
                        address_book_no}, this.GetBCUsersByAN8OperationCompleted, userState);
        }
        
        private void OnGetBCUsersByAN8OperationCompleted(object arg) {
            if ((this.GetBCUsersByAN8Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBCUsersByAN8Completed(this, new GetBCUsersByAN8CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/UpdatetB2BRequestEntry", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdatetB2BRequestEntry(int request_id, int approve, string update_by) {
            object[] results = this.Invoke("UpdatetB2BRequestEntry", new object[] {
                        request_id,
                        approve,
                        update_by});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatetB2BRequestEntryAsync(int request_id, int approve, string update_by) {
            this.UpdatetB2BRequestEntryAsync(request_id, approve, update_by, null);
        }
        
        /// <remarks/>
        public void UpdatetB2BRequestEntryAsync(int request_id, int approve, string update_by, object userState) {
            if ((this.UpdatetB2BRequestEntryOperationCompleted == null)) {
                this.UpdatetB2BRequestEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatetB2BRequestEntryOperationCompleted);
            }
            this.InvokeAsync("UpdatetB2BRequestEntry", new object[] {
                        request_id,
                        approve,
                        update_by}, this.UpdatetB2BRequestEntryOperationCompleted, userState);
        }
        
        private void OnUpdatetB2BRequestEntryOperationCompleted(object arg) {
            if ((this.UpdatetB2BRequestEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatetB2BRequestEntryCompleted(this, new UpdatetB2BRequestEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/InsertB2BRequestToERP", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertB2BRequestToERP(int StagingId, int AN8, string msg) {
            object[] results = this.Invoke("InsertB2BRequestToERP", new object[] {
                        StagingId,
                        AN8,
                        msg});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertB2BRequestToERPAsync(int StagingId, int AN8, string msg) {
            this.InsertB2BRequestToERPAsync(StagingId, AN8, msg, null);
        }
        
        /// <remarks/>
        public void InsertB2BRequestToERPAsync(int StagingId, int AN8, string msg, object userState) {
            if ((this.InsertB2BRequestToERPOperationCompleted == null)) {
                this.InsertB2BRequestToERPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertB2BRequestToERPOperationCompleted);
            }
            this.InvokeAsync("InsertB2BRequestToERP", new object[] {
                        StagingId,
                        AN8,
                        msg}, this.InsertB2BRequestToERPOperationCompleted, userState);
        }
        
        private void OnInsertB2BRequestToERPOperationCompleted(object arg) {
            if ((this.InsertB2BRequestToERPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertB2BRequestToERPCompleted(this, new InsertB2BRequestToERPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/InsertB2BRequestEntry", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertB2BRequestEntry(string First_Name, string Last_Name, string Email, string Address1, string Address2, string City, string State, string Zip, string Phone_Number, int account_no, string account_name, int contact_staging_id, string AccountProductLine) {
            object[] results = this.Invoke("InsertB2BRequestEntry", new object[] {
                        First_Name,
                        Last_Name,
                        Email,
                        Address1,
                        Address2,
                        City,
                        State,
                        Zip,
                        Phone_Number,
                        account_no,
                        account_name,
                        contact_staging_id,
                        AccountProductLine});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertB2BRequestEntryAsync(string First_Name, string Last_Name, string Email, string Address1, string Address2, string City, string State, string Zip, string Phone_Number, int account_no, string account_name, int contact_staging_id, string AccountProductLine) {
            this.InsertB2BRequestEntryAsync(First_Name, Last_Name, Email, Address1, Address2, City, State, Zip, Phone_Number, account_no, account_name, contact_staging_id, AccountProductLine, null);
        }
        
        /// <remarks/>
        public void InsertB2BRequestEntryAsync(string First_Name, string Last_Name, string Email, string Address1, string Address2, string City, string State, string Zip, string Phone_Number, int account_no, string account_name, int contact_staging_id, string AccountProductLine, object userState) {
            if ((this.InsertB2BRequestEntryOperationCompleted == null)) {
                this.InsertB2BRequestEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertB2BRequestEntryOperationCompleted);
            }
            this.InvokeAsync("InsertB2BRequestEntry", new object[] {
                        First_Name,
                        Last_Name,
                        Email,
                        Address1,
                        Address2,
                        City,
                        State,
                        Zip,
                        Phone_Number,
                        account_no,
                        account_name,
                        contact_staging_id,
                        AccountProductLine}, this.InsertB2BRequestEntryOperationCompleted, userState);
        }
        
        private void OnInsertB2BRequestEntryOperationCompleted(object arg) {
            if ((this.InsertB2BRequestEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertB2BRequestEntryCompleted(this, new InsertB2BRequestEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/UpdateEncryptedPassword", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateEncryptedPassword(int StagingContactID, string password) {
            this.Invoke("UpdateEncryptedPassword", new object[] {
                        StagingContactID,
                        password});
        }
        
        /// <remarks/>
        public void UpdateEncryptedPasswordAsync(int StagingContactID, string password) {
            this.UpdateEncryptedPasswordAsync(StagingContactID, password, null);
        }
        
        /// <remarks/>
        public void UpdateEncryptedPasswordAsync(int StagingContactID, string password, object userState) {
            if ((this.UpdateEncryptedPasswordOperationCompleted == null)) {
                this.UpdateEncryptedPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEncryptedPasswordOperationCompleted);
            }
            this.InvokeAsync("UpdateEncryptedPassword", new object[] {
                        StagingContactID,
                        password}, this.UpdateEncryptedPasswordOperationCompleted, userState);
        }
        
        private void OnUpdateEncryptedPasswordOperationCompleted(object arg) {
            if ((this.UpdateEncryptedPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEncryptedPasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/GetBCUsers", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBCUsers() {
            object[] results = this.Invoke("GetBCUsers", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBCUsersAsync() {
            this.GetBCUsersAsync(null);
        }
        
        /// <remarks/>
        public void GetBCUsersAsync(object userState) {
            if ((this.GetBCUsersOperationCompleted == null)) {
                this.GetBCUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBCUsersOperationCompleted);
            }
            this.InvokeAsync("GetBCUsers", new object[0], this.GetBCUsersOperationCompleted, userState);
        }
        
        private void OnGetBCUsersOperationCompleted(object arg) {
            if ((this.GetBCUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBCUsersCompleted(this, new GetBCUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/InsertB2CRequestEntry", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertB2CRequestEntry(string First_Name, string Last_Name, string Email, string Address1, string Address2, string City, string State, string Zip, string Phone_Number, int account_no, string account_name, string WebSite_URL, string WebSite_URL_preview, int ContactStagingID, string AccountProductLine) {
            object[] results = this.Invoke("InsertB2CRequestEntry", new object[] {
                        First_Name,
                        Last_Name,
                        Email,
                        Address1,
                        Address2,
                        City,
                        State,
                        Zip,
                        Phone_Number,
                        account_no,
                        account_name,
                        WebSite_URL,
                        WebSite_URL_preview,
                        ContactStagingID,
                        AccountProductLine});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertB2CRequestEntryAsync(string First_Name, string Last_Name, string Email, string Address1, string Address2, string City, string State, string Zip, string Phone_Number, int account_no, string account_name, string WebSite_URL, string WebSite_URL_preview, int ContactStagingID, string AccountProductLine) {
            this.InsertB2CRequestEntryAsync(First_Name, Last_Name, Email, Address1, Address2, City, State, Zip, Phone_Number, account_no, account_name, WebSite_URL, WebSite_URL_preview, ContactStagingID, AccountProductLine, null);
        }
        
        /// <remarks/>
        public void InsertB2CRequestEntryAsync(
                    string First_Name, 
                    string Last_Name, 
                    string Email, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string Zip, 
                    string Phone_Number, 
                    int account_no, 
                    string account_name, 
                    string WebSite_URL, 
                    string WebSite_URL_preview, 
                    int ContactStagingID, 
                    string AccountProductLine, 
                    object userState) {
            if ((this.InsertB2CRequestEntryOperationCompleted == null)) {
                this.InsertB2CRequestEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertB2CRequestEntryOperationCompleted);
            }
            this.InvokeAsync("InsertB2CRequestEntry", new object[] {
                        First_Name,
                        Last_Name,
                        Email,
                        Address1,
                        Address2,
                        City,
                        State,
                        Zip,
                        Phone_Number,
                        account_no,
                        account_name,
                        WebSite_URL,
                        WebSite_URL_preview,
                        ContactStagingID,
                        AccountProductLine}, this.InsertB2CRequestEntryOperationCompleted, userState);
        }
        
        private void OnInsertB2CRequestEntryOperationCompleted(object arg) {
            if ((this.InsertB2CRequestEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertB2CRequestEntryCompleted(this, new InsertB2CRequestEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/InsertB2CRequestEntry_ss", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertB2CRequestEntry_ss(
                    string First_Name, 
                    string Last_Name, 
                    string Email, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string Zip, 
                    string Phone_Number, 
                    int account_no, 
                    string account_name, 
                    string WebSite_URL, 
                    string WebSite_URL_preview, 
                    int ContactStagingID, 
                    string AccountProductLine, 
                    int salon_services_acct) {
            object[] results = this.Invoke("InsertB2CRequestEntry_ss", new object[] {
                        First_Name,
                        Last_Name,
                        Email,
                        Address1,
                        Address2,
                        City,
                        State,
                        Zip,
                        Phone_Number,
                        account_no,
                        account_name,
                        WebSite_URL,
                        WebSite_URL_preview,
                        ContactStagingID,
                        AccountProductLine,
                        salon_services_acct});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertB2CRequestEntry_ssAsync(
                    string First_Name, 
                    string Last_Name, 
                    string Email, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string Zip, 
                    string Phone_Number, 
                    int account_no, 
                    string account_name, 
                    string WebSite_URL, 
                    string WebSite_URL_preview, 
                    int ContactStagingID, 
                    string AccountProductLine, 
                    int salon_services_acct) {
            this.InsertB2CRequestEntry_ssAsync(First_Name, Last_Name, Email, Address1, Address2, City, State, Zip, Phone_Number, account_no, account_name, WebSite_URL, WebSite_URL_preview, ContactStagingID, AccountProductLine, salon_services_acct, null);
        }
        
        /// <remarks/>
        public void InsertB2CRequestEntry_ssAsync(
                    string First_Name, 
                    string Last_Name, 
                    string Email, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string Zip, 
                    string Phone_Number, 
                    int account_no, 
                    string account_name, 
                    string WebSite_URL, 
                    string WebSite_URL_preview, 
                    int ContactStagingID, 
                    string AccountProductLine, 
                    int salon_services_acct, 
                    object userState) {
            if ((this.InsertB2CRequestEntry_ssOperationCompleted == null)) {
                this.InsertB2CRequestEntry_ssOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertB2CRequestEntry_ssOperationCompleted);
            }
            this.InvokeAsync("InsertB2CRequestEntry_ss", new object[] {
                        First_Name,
                        Last_Name,
                        Email,
                        Address1,
                        Address2,
                        City,
                        State,
                        Zip,
                        Phone_Number,
                        account_no,
                        account_name,
                        WebSite_URL,
                        WebSite_URL_preview,
                        ContactStagingID,
                        AccountProductLine,
                        salon_services_acct}, this.InsertB2CRequestEntry_ssOperationCompleted, userState);
        }
        
        private void OnInsertB2CRequestEntry_ssOperationCompleted(object arg) {
            if ((this.InsertB2CRequestEntry_ssCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertB2CRequestEntry_ssCompleted(this, new InsertB2CRequestEntry_ssCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/RetrieveB2CRequest", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveB2CRequest(int request_id) {
            object[] results = this.Invoke("RetrieveB2CRequest", new object[] {
                        request_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveB2CRequestAsync(int request_id) {
            this.RetrieveB2CRequestAsync(request_id, null);
        }
        
        /// <remarks/>
        public void RetrieveB2CRequestAsync(int request_id, object userState) {
            if ((this.RetrieveB2CRequestOperationCompleted == null)) {
                this.RetrieveB2CRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveB2CRequestOperationCompleted);
            }
            this.InvokeAsync("RetrieveB2CRequest", new object[] {
                        request_id}, this.RetrieveB2CRequestOperationCompleted, userState);
        }
        
        private void OnRetrieveB2CRequestOperationCompleted(object arg) {
            if ((this.RetrieveB2CRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveB2CRequestCompleted(this, new RetrieveB2CRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/RetrieveB2CRequestByEmail", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveB2CRequestByEmail(string email, int account_no) {
            object[] results = this.Invoke("RetrieveB2CRequestByEmail", new object[] {
                        email,
                        account_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveB2CRequestByEmailAsync(string email, int account_no) {
            this.RetrieveB2CRequestByEmailAsync(email, account_no, null);
        }
        
        /// <remarks/>
        public void RetrieveB2CRequestByEmailAsync(string email, int account_no, object userState) {
            if ((this.RetrieveB2CRequestByEmailOperationCompleted == null)) {
                this.RetrieveB2CRequestByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveB2CRequestByEmailOperationCompleted);
            }
            this.InvokeAsync("RetrieveB2CRequestByEmail", new object[] {
                        email,
                        account_no}, this.RetrieveB2CRequestByEmailOperationCompleted, userState);
        }
        
        private void OnRetrieveB2CRequestByEmailOperationCompleted(object arg) {
            if ((this.RetrieveB2CRequestByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveB2CRequestByEmailCompleted(this, new RetrieveB2CRequestByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/UpdatetB2CRequestEntry", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdatetB2CRequestEntry(int request_id, string Status, string update_by) {
            object[] results = this.Invoke("UpdatetB2CRequestEntry", new object[] {
                        request_id,
                        Status,
                        update_by});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatetB2CRequestEntryAsync(int request_id, string Status, string update_by) {
            this.UpdatetB2CRequestEntryAsync(request_id, Status, update_by, null);
        }
        
        /// <remarks/>
        public void UpdatetB2CRequestEntryAsync(int request_id, string Status, string update_by, object userState) {
            if ((this.UpdatetB2CRequestEntryOperationCompleted == null)) {
                this.UpdatetB2CRequestEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatetB2CRequestEntryOperationCompleted);
            }
            this.InvokeAsync("UpdatetB2CRequestEntry", new object[] {
                        request_id,
                        Status,
                        update_by}, this.UpdatetB2CRequestEntryOperationCompleted, userState);
        }
        
        private void OnUpdatetB2CRequestEntryOperationCompleted(object arg) {
            if ((this.UpdatetB2CRequestEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatetB2CRequestEntryCompleted(this, new UpdatetB2CRequestEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/VerifyB2CProfile", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet VerifyB2CProfile(int account_no) {
            object[] results = this.Invoke("VerifyB2CProfile", new object[] {
                        account_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyB2CProfileAsync(int account_no) {
            this.VerifyB2CProfileAsync(account_no, null);
        }
        
        /// <remarks/>
        public void VerifyB2CProfileAsync(int account_no, object userState) {
            if ((this.VerifyB2CProfileOperationCompleted == null)) {
                this.VerifyB2CProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyB2CProfileOperationCompleted);
            }
            this.InvokeAsync("VerifyB2CProfile", new object[] {
                        account_no}, this.VerifyB2CProfileOperationCompleted, userState);
        }
        
        private void OnVerifyB2CProfileOperationCompleted(object arg) {
            if ((this.VerifyB2CProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyB2CProfileCompleted(this, new VerifyB2CProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/VerifyB2CProfileByAn8Prod", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet VerifyB2CProfileByAn8Prod(int account_no, string acct_prod_line) {
            object[] results = this.Invoke("VerifyB2CProfileByAn8Prod", new object[] {
                        account_no,
                        acct_prod_line});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyB2CProfileByAn8ProdAsync(int account_no, string acct_prod_line) {
            this.VerifyB2CProfileByAn8ProdAsync(account_no, acct_prod_line, null);
        }
        
        /// <remarks/>
        public void VerifyB2CProfileByAn8ProdAsync(int account_no, string acct_prod_line, object userState) {
            if ((this.VerifyB2CProfileByAn8ProdOperationCompleted == null)) {
                this.VerifyB2CProfileByAn8ProdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyB2CProfileByAn8ProdOperationCompleted);
            }
            this.InvokeAsync("VerifyB2CProfileByAn8Prod", new object[] {
                        account_no,
                        acct_prod_line}, this.VerifyB2CProfileByAn8ProdOperationCompleted, userState);
        }
        
        private void OnVerifyB2CProfileByAn8ProdOperationCompleted(object arg) {
            if ((this.VerifyB2CProfileByAn8ProdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyB2CProfileByAn8ProdCompleted(this, new VerifyB2CProfileByAn8ProdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/InsertAffiliateRequestEntry", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertAffiliateRequestEntry(string First_Name, string Last_Name, string Email, string Address1, string Address2, string City, string State, string Zip, string Phone_Number, int account_no, string account_name, string WebSite_URL, int ContactStagingID, string AccountProductLine) {
            object[] results = this.Invoke("InsertAffiliateRequestEntry", new object[] {
                        First_Name,
                        Last_Name,
                        Email,
                        Address1,
                        Address2,
                        City,
                        State,
                        Zip,
                        Phone_Number,
                        account_no,
                        account_name,
                        WebSite_URL,
                        ContactStagingID,
                        AccountProductLine});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAffiliateRequestEntryAsync(string First_Name, string Last_Name, string Email, string Address1, string Address2, string City, string State, string Zip, string Phone_Number, int account_no, string account_name, string WebSite_URL, int ContactStagingID, string AccountProductLine) {
            this.InsertAffiliateRequestEntryAsync(First_Name, Last_Name, Email, Address1, Address2, City, State, Zip, Phone_Number, account_no, account_name, WebSite_URL, ContactStagingID, AccountProductLine, null);
        }
        
        /// <remarks/>
        public void InsertAffiliateRequestEntryAsync(string First_Name, string Last_Name, string Email, string Address1, string Address2, string City, string State, string Zip, string Phone_Number, int account_no, string account_name, string WebSite_URL, int ContactStagingID, string AccountProductLine, object userState) {
            if ((this.InsertAffiliateRequestEntryOperationCompleted == null)) {
                this.InsertAffiliateRequestEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAffiliateRequestEntryOperationCompleted);
            }
            this.InvokeAsync("InsertAffiliateRequestEntry", new object[] {
                        First_Name,
                        Last_Name,
                        Email,
                        Address1,
                        Address2,
                        City,
                        State,
                        Zip,
                        Phone_Number,
                        account_no,
                        account_name,
                        WebSite_URL,
                        ContactStagingID,
                        AccountProductLine}, this.InsertAffiliateRequestEntryOperationCompleted, userState);
        }
        
        private void OnInsertAffiliateRequestEntryOperationCompleted(object arg) {
            if ((this.InsertAffiliateRequestEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAffiliateRequestEntryCompleted(this, new InsertAffiliateRequestEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/VerifyAffiliateProfile", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet VerifyAffiliateProfile(int account_no) {
            object[] results = this.Invoke("VerifyAffiliateProfile", new object[] {
                        account_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyAffiliateProfileAsync(int account_no) {
            this.VerifyAffiliateProfileAsync(account_no, null);
        }
        
        /// <remarks/>
        public void VerifyAffiliateProfileAsync(int account_no, object userState) {
            if ((this.VerifyAffiliateProfileOperationCompleted == null)) {
                this.VerifyAffiliateProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyAffiliateProfileOperationCompleted);
            }
            this.InvokeAsync("VerifyAffiliateProfile", new object[] {
                        account_no}, this.VerifyAffiliateProfileOperationCompleted, userState);
        }
        
        private void OnVerifyAffiliateProfileOperationCompleted(object arg) {
            if ((this.VerifyAffiliateProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyAffiliateProfileCompleted(this, new VerifyAffiliateProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/VerifyAffiliateProfileByAn8Prod", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet VerifyAffiliateProfileByAn8Prod(int account_no, string acct_prod_line) {
            object[] results = this.Invoke("VerifyAffiliateProfileByAn8Prod", new object[] {
                        account_no,
                        acct_prod_line});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyAffiliateProfileByAn8ProdAsync(int account_no, string acct_prod_line) {
            this.VerifyAffiliateProfileByAn8ProdAsync(account_no, acct_prod_line, null);
        }
        
        /// <remarks/>
        public void VerifyAffiliateProfileByAn8ProdAsync(int account_no, string acct_prod_line, object userState) {
            if ((this.VerifyAffiliateProfileByAn8ProdOperationCompleted == null)) {
                this.VerifyAffiliateProfileByAn8ProdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyAffiliateProfileByAn8ProdOperationCompleted);
            }
            this.InvokeAsync("VerifyAffiliateProfileByAn8Prod", new object[] {
                        account_no,
                        acct_prod_line}, this.VerifyAffiliateProfileByAn8ProdOperationCompleted, userState);
        }
        
        private void OnVerifyAffiliateProfileByAn8ProdOperationCompleted(object arg) {
            if ((this.VerifyAffiliateProfileByAn8ProdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyAffiliateProfileByAn8ProdCompleted(this, new VerifyAffiliateProfileByAn8ProdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/InsertAffiliateRequestEntry_ss", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertAffiliateRequestEntry_ss(string First_Name, string Last_Name, string Email, string Address1, string Address2, string City, string State, string Zip, string Phone_Number, int account_no, string account_name, string WebSite_URL, int ContactStagingID, string AccountProductLine, int salon_services_acct) {
            object[] results = this.Invoke("InsertAffiliateRequestEntry_ss", new object[] {
                        First_Name,
                        Last_Name,
                        Email,
                        Address1,
                        Address2,
                        City,
                        State,
                        Zip,
                        Phone_Number,
                        account_no,
                        account_name,
                        WebSite_URL,
                        ContactStagingID,
                        AccountProductLine,
                        salon_services_acct});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAffiliateRequestEntry_ssAsync(string First_Name, string Last_Name, string Email, string Address1, string Address2, string City, string State, string Zip, string Phone_Number, int account_no, string account_name, string WebSite_URL, int ContactStagingID, string AccountProductLine, int salon_services_acct) {
            this.InsertAffiliateRequestEntry_ssAsync(First_Name, Last_Name, Email, Address1, Address2, City, State, Zip, Phone_Number, account_no, account_name, WebSite_URL, ContactStagingID, AccountProductLine, salon_services_acct, null);
        }
        
        /// <remarks/>
        public void InsertAffiliateRequestEntry_ssAsync(
                    string First_Name, 
                    string Last_Name, 
                    string Email, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string Zip, 
                    string Phone_Number, 
                    int account_no, 
                    string account_name, 
                    string WebSite_URL, 
                    int ContactStagingID, 
                    string AccountProductLine, 
                    int salon_services_acct, 
                    object userState) {
            if ((this.InsertAffiliateRequestEntry_ssOperationCompleted == null)) {
                this.InsertAffiliateRequestEntry_ssOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAffiliateRequestEntry_ssOperationCompleted);
            }
            this.InvokeAsync("InsertAffiliateRequestEntry_ss", new object[] {
                        First_Name,
                        Last_Name,
                        Email,
                        Address1,
                        Address2,
                        City,
                        State,
                        Zip,
                        Phone_Number,
                        account_no,
                        account_name,
                        WebSite_URL,
                        ContactStagingID,
                        AccountProductLine,
                        salon_services_acct}, this.InsertAffiliateRequestEntry_ssOperationCompleted, userState);
        }
        
        private void OnInsertAffiliateRequestEntry_ssOperationCompleted(object arg) {
            if ((this.InsertAffiliateRequestEntry_ssCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAffiliateRequestEntry_ssCompleted(this, new InsertAffiliateRequestEntry_ssCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/VerifyAffiliateProfile_SS", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet VerifyAffiliateProfile_SS(int account_no, int salon_services_acct) {
            object[] results = this.Invoke("VerifyAffiliateProfile_SS", new object[] {
                        account_no,
                        salon_services_acct});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyAffiliateProfile_SSAsync(int account_no, int salon_services_acct) {
            this.VerifyAffiliateProfile_SSAsync(account_no, salon_services_acct, null);
        }
        
        /// <remarks/>
        public void VerifyAffiliateProfile_SSAsync(int account_no, int salon_services_acct, object userState) {
            if ((this.VerifyAffiliateProfile_SSOperationCompleted == null)) {
                this.VerifyAffiliateProfile_SSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyAffiliateProfile_SSOperationCompleted);
            }
            this.InvokeAsync("VerifyAffiliateProfile_SS", new object[] {
                        account_no,
                        salon_services_acct}, this.VerifyAffiliateProfile_SSOperationCompleted, userState);
        }
        
        private void OnVerifyAffiliateProfile_SSOperationCompleted(object arg) {
            if ((this.VerifyAffiliateProfile_SSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyAffiliateProfile_SSCompleted(this, new VerifyAffiliateProfile_SSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/VerifyAffiliateProfileByAn8Prod_SS", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet VerifyAffiliateProfileByAn8Prod_SS(int account_no, string acct_prod_line, int salon_services_acct) {
            object[] results = this.Invoke("VerifyAffiliateProfileByAn8Prod_SS", new object[] {
                        account_no,
                        acct_prod_line,
                        salon_services_acct});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyAffiliateProfileByAn8Prod_SSAsync(int account_no, string acct_prod_line, int salon_services_acct) {
            this.VerifyAffiliateProfileByAn8Prod_SSAsync(account_no, acct_prod_line, salon_services_acct, null);
        }
        
        /// <remarks/>
        public void VerifyAffiliateProfileByAn8Prod_SSAsync(int account_no, string acct_prod_line, int salon_services_acct, object userState) {
            if ((this.VerifyAffiliateProfileByAn8Prod_SSOperationCompleted == null)) {
                this.VerifyAffiliateProfileByAn8Prod_SSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyAffiliateProfileByAn8Prod_SSOperationCompleted);
            }
            this.InvokeAsync("VerifyAffiliateProfileByAn8Prod_SS", new object[] {
                        account_no,
                        acct_prod_line,
                        salon_services_acct}, this.VerifyAffiliateProfileByAn8Prod_SSOperationCompleted, userState);
        }
        
        private void OnVerifyAffiliateProfileByAn8Prod_SSOperationCompleted(object arg) {
            if ((this.VerifyAffiliateProfileByAn8Prod_SSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyAffiliateProfileByAn8Prod_SSCompleted(this, new VerifyAffiliateProfileByAn8Prod_SSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/UpdatetAffiliateRequestEntry", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdatetAffiliateRequestEntry(int request_id, string Status, string update_by) {
            object[] results = this.Invoke("UpdatetAffiliateRequestEntry", new object[] {
                        request_id,
                        Status,
                        update_by});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatetAffiliateRequestEntryAsync(int request_id, string Status, string update_by) {
            this.UpdatetAffiliateRequestEntryAsync(request_id, Status, update_by, null);
        }
        
        /// <remarks/>
        public void UpdatetAffiliateRequestEntryAsync(int request_id, string Status, string update_by, object userState) {
            if ((this.UpdatetAffiliateRequestEntryOperationCompleted == null)) {
                this.UpdatetAffiliateRequestEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatetAffiliateRequestEntryOperationCompleted);
            }
            this.InvokeAsync("UpdatetAffiliateRequestEntry", new object[] {
                        request_id,
                        Status,
                        update_by}, this.UpdatetAffiliateRequestEntryOperationCompleted, userState);
        }
        
        private void OnUpdatetAffiliateRequestEntryOperationCompleted(object arg) {
            if ((this.UpdatetAffiliateRequestEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatetAffiliateRequestEntryCompleted(this, new UpdatetAffiliateRequestEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/RetrieveAffiliateRequest", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveAffiliateRequest(int request_id) {
            object[] results = this.Invoke("RetrieveAffiliateRequest", new object[] {
                        request_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveAffiliateRequestAsync(int request_id) {
            this.RetrieveAffiliateRequestAsync(request_id, null);
        }
        
        /// <remarks/>
        public void RetrieveAffiliateRequestAsync(int request_id, object userState) {
            if ((this.RetrieveAffiliateRequestOperationCompleted == null)) {
                this.RetrieveAffiliateRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAffiliateRequestOperationCompleted);
            }
            this.InvokeAsync("RetrieveAffiliateRequest", new object[] {
                        request_id}, this.RetrieveAffiliateRequestOperationCompleted, userState);
        }
        
        private void OnRetrieveAffiliateRequestOperationCompleted(object arg) {
            if ((this.RetrieveAffiliateRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAffiliateRequestCompleted(this, new RetrieveAffiliateRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/Insert_SalonServ_BusinessCenter", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Insert_SalonServ_BusinessCenter(int account_number, string first_name, string last_name, string role, string phone, string phone_ext, string email_address, string password, int terms) {
            object[] results = this.Invoke("Insert_SalonServ_BusinessCenter", new object[] {
                        account_number,
                        first_name,
                        last_name,
                        role,
                        phone,
                        phone_ext,
                        email_address,
                        password,
                        terms});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Insert_SalonServ_BusinessCenterAsync(int account_number, string first_name, string last_name, string role, string phone, string phone_ext, string email_address, string password, int terms) {
            this.Insert_SalonServ_BusinessCenterAsync(account_number, first_name, last_name, role, phone, phone_ext, email_address, password, terms, null);
        }
        
        /// <remarks/>
        public void Insert_SalonServ_BusinessCenterAsync(int account_number, string first_name, string last_name, string role, string phone, string phone_ext, string email_address, string password, int terms, object userState) {
            if ((this.Insert_SalonServ_BusinessCenterOperationCompleted == null)) {
                this.Insert_SalonServ_BusinessCenterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_SalonServ_BusinessCenterOperationCompleted);
            }
            this.InvokeAsync("Insert_SalonServ_BusinessCenter", new object[] {
                        account_number,
                        first_name,
                        last_name,
                        role,
                        phone,
                        phone_ext,
                        email_address,
                        password,
                        terms}, this.Insert_SalonServ_BusinessCenterOperationCompleted, userState);
        }
        
        private void OnInsert_SalonServ_BusinessCenterOperationCompleted(object arg) {
            if ((this.Insert_SalonServ_BusinessCenterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_SalonServ_BusinessCenterCompleted(this, new Insert_SalonServ_BusinessCenterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/Update_SalonServ_BusinessCenter", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Update_SalonServ_BusinessCenter(int ss_contact_id, int account_number, string first_name, string last_name, string role, string phone, string phone_ext, string email_address, string password, int terms) {
            object[] results = this.Invoke("Update_SalonServ_BusinessCenter", new object[] {
                        ss_contact_id,
                        account_number,
                        first_name,
                        last_name,
                        role,
                        phone,
                        phone_ext,
                        email_address,
                        password,
                        terms});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Update_SalonServ_BusinessCenterAsync(int ss_contact_id, int account_number, string first_name, string last_name, string role, string phone, string phone_ext, string email_address, string password, int terms) {
            this.Update_SalonServ_BusinessCenterAsync(ss_contact_id, account_number, first_name, last_name, role, phone, phone_ext, email_address, password, terms, null);
        }
        
        /// <remarks/>
        public void Update_SalonServ_BusinessCenterAsync(int ss_contact_id, int account_number, string first_name, string last_name, string role, string phone, string phone_ext, string email_address, string password, int terms, object userState) {
            if ((this.Update_SalonServ_BusinessCenterOperationCompleted == null)) {
                this.Update_SalonServ_BusinessCenterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_SalonServ_BusinessCenterOperationCompleted);
            }
            this.InvokeAsync("Update_SalonServ_BusinessCenter", new object[] {
                        ss_contact_id,
                        account_number,
                        first_name,
                        last_name,
                        role,
                        phone,
                        phone_ext,
                        email_address,
                        password,
                        terms}, this.Update_SalonServ_BusinessCenterOperationCompleted, userState);
        }
        
        private void OnUpdate_SalonServ_BusinessCenterOperationCompleted(object arg) {
            if ((this.Update_SalonServ_BusinessCenterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_SalonServ_BusinessCenterCompleted(this, new Update_SalonServ_BusinessCenterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/Retrieve_SalonServ_BusinessCenter", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Retrieve_SalonServ_BusinessCenter(int account_number, string email_address) {
            object[] results = this.Invoke("Retrieve_SalonServ_BusinessCenter", new object[] {
                        account_number,
                        email_address});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Retrieve_SalonServ_BusinessCenterAsync(int account_number, string email_address) {
            this.Retrieve_SalonServ_BusinessCenterAsync(account_number, email_address, null);
        }
        
        /// <remarks/>
        public void Retrieve_SalonServ_BusinessCenterAsync(int account_number, string email_address, object userState) {
            if ((this.Retrieve_SalonServ_BusinessCenterOperationCompleted == null)) {
                this.Retrieve_SalonServ_BusinessCenterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieve_SalonServ_BusinessCenterOperationCompleted);
            }
            this.InvokeAsync("Retrieve_SalonServ_BusinessCenter", new object[] {
                        account_number,
                        email_address}, this.Retrieve_SalonServ_BusinessCenterOperationCompleted, userState);
        }
        
        private void OnRetrieve_SalonServ_BusinessCenterOperationCompleted(object arg) {
            if ((this.Retrieve_SalonServ_BusinessCenterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Retrieve_SalonServ_BusinessCenterCompleted(this, new Retrieve_SalonServ_BusinessCenterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/Retrieve_SalonServ_CustMaster", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Retrieve_SalonServ_CustMaster(string cust_number) {
            object[] results = this.Invoke("Retrieve_SalonServ_CustMaster", new object[] {
                        cust_number});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Retrieve_SalonServ_CustMasterAsync(string cust_number) {
            this.Retrieve_SalonServ_CustMasterAsync(cust_number, null);
        }
        
        /// <remarks/>
        public void Retrieve_SalonServ_CustMasterAsync(string cust_number, object userState) {
            if ((this.Retrieve_SalonServ_CustMasterOperationCompleted == null)) {
                this.Retrieve_SalonServ_CustMasterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieve_SalonServ_CustMasterOperationCompleted);
            }
            this.InvokeAsync("Retrieve_SalonServ_CustMaster", new object[] {
                        cust_number}, this.Retrieve_SalonServ_CustMasterOperationCompleted, userState);
        }
        
        private void OnRetrieve_SalonServ_CustMasterOperationCompleted(object arg) {
            if ((this.Retrieve_SalonServ_CustMasterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Retrieve_SalonServ_CustMasterCompleted(this, new Retrieve_SalonServ_CustMasterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/Retrieve_SalonServ_BusinessCenter_Email", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Retrieve_SalonServ_BusinessCenter_Email(string email_address) {
            object[] results = this.Invoke("Retrieve_SalonServ_BusinessCenter_Email", new object[] {
                        email_address});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Retrieve_SalonServ_BusinessCenter_EmailAsync(string email_address) {
            this.Retrieve_SalonServ_BusinessCenter_EmailAsync(email_address, null);
        }
        
        /// <remarks/>
        public void Retrieve_SalonServ_BusinessCenter_EmailAsync(string email_address, object userState) {
            if ((this.Retrieve_SalonServ_BusinessCenter_EmailOperationCompleted == null)) {
                this.Retrieve_SalonServ_BusinessCenter_EmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieve_SalonServ_BusinessCenter_EmailOperationCompleted);
            }
            this.InvokeAsync("Retrieve_SalonServ_BusinessCenter_Email", new object[] {
                        email_address}, this.Retrieve_SalonServ_BusinessCenter_EmailOperationCompleted, userState);
        }
        
        private void OnRetrieve_SalonServ_BusinessCenter_EmailOperationCompleted(object arg) {
            if ((this.Retrieve_SalonServ_BusinessCenter_EmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Retrieve_SalonServ_BusinessCenter_EmailCompleted(this, new Retrieve_SalonServ_BusinessCenter_EmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/Retrieve_SalonServ_BusinessCenter_Email_Passwo" +
            "rd", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Retrieve_SalonServ_BusinessCenter_Email_Password(string email_address, string password) {
            object[] results = this.Invoke("Retrieve_SalonServ_BusinessCenter_Email_Password", new object[] {
                        email_address,
                        password});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Retrieve_SalonServ_BusinessCenter_Email_PasswordAsync(string email_address, string password) {
            this.Retrieve_SalonServ_BusinessCenter_Email_PasswordAsync(email_address, password, null);
        }
        
        /// <remarks/>
        public void Retrieve_SalonServ_BusinessCenter_Email_PasswordAsync(string email_address, string password, object userState) {
            if ((this.Retrieve_SalonServ_BusinessCenter_Email_PasswordOperationCompleted == null)) {
                this.Retrieve_SalonServ_BusinessCenter_Email_PasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieve_SalonServ_BusinessCenter_Email_PasswordOperationCompleted);
            }
            this.InvokeAsync("Retrieve_SalonServ_BusinessCenter_Email_Password", new object[] {
                        email_address,
                        password}, this.Retrieve_SalonServ_BusinessCenter_Email_PasswordOperationCompleted, userState);
        }
        
        private void OnRetrieve_SalonServ_BusinessCenter_Email_PasswordOperationCompleted(object arg) {
            if ((this.Retrieve_SalonServ_BusinessCenter_Email_PasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Retrieve_SalonServ_BusinessCenter_Email_PasswordCompleted(this, new Retrieve_SalonServ_BusinessCenter_Email_PasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/Update_SalonServices_BusinessCenter_Counter", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Update_SalonServices_BusinessCenter_Counter(int contact_id) {
            object[] results = this.Invoke("Update_SalonServices_BusinessCenter_Counter", new object[] {
                        contact_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Update_SalonServices_BusinessCenter_CounterAsync(int contact_id) {
            this.Update_SalonServices_BusinessCenter_CounterAsync(contact_id, null);
        }
        
        /// <remarks/>
        public void Update_SalonServices_BusinessCenter_CounterAsync(int contact_id, object userState) {
            if ((this.Update_SalonServices_BusinessCenter_CounterOperationCompleted == null)) {
                this.Update_SalonServices_BusinessCenter_CounterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_SalonServices_BusinessCenter_CounterOperationCompleted);
            }
            this.InvokeAsync("Update_SalonServices_BusinessCenter_Counter", new object[] {
                        contact_id}, this.Update_SalonServices_BusinessCenter_CounterOperationCompleted, userState);
        }
        
        private void OnUpdate_SalonServices_BusinessCenter_CounterOperationCompleted(object arg) {
            if ((this.Update_SalonServices_BusinessCenter_CounterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_SalonServices_BusinessCenter_CounterCompleted(this, new Update_SalonServices_BusinessCenter_CounterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/Retrieve_Payterms_Exist", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Retrieve_Payterms_Exist(int account_no) {
            object[] results = this.Invoke("Retrieve_Payterms_Exist", new object[] {
                        account_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Retrieve_Payterms_ExistAsync(int account_no) {
            this.Retrieve_Payterms_ExistAsync(account_no, null);
        }
        
        /// <remarks/>
        public void Retrieve_Payterms_ExistAsync(int account_no, object userState) {
            if ((this.Retrieve_Payterms_ExistOperationCompleted == null)) {
                this.Retrieve_Payterms_ExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieve_Payterms_ExistOperationCompleted);
            }
            this.InvokeAsync("Retrieve_Payterms_Exist", new object[] {
                        account_no}, this.Retrieve_Payterms_ExistOperationCompleted, userState);
        }
        
        private void OnRetrieve_Payterms_ExistOperationCompleted(object arg) {
            if ((this.Retrieve_Payterms_ExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Retrieve_Payterms_ExistCompleted(this, new Retrieve_Payterms_ExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/InsertPayTermsRequestEntry", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertPayTermsRequestEntry(string First_Name, string Last_Name, string Email, string Address1, string Address2, string City, string State, string Zip, string Phone_Number, int account_no, string account_name, string owner_name, string owner_email, int ContactStagingID, string AccountProductLine) {
            object[] results = this.Invoke("InsertPayTermsRequestEntry", new object[] {
                        First_Name,
                        Last_Name,
                        Email,
                        Address1,
                        Address2,
                        City,
                        State,
                        Zip,
                        Phone_Number,
                        account_no,
                        account_name,
                        owner_name,
                        owner_email,
                        ContactStagingID,
                        AccountProductLine});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertPayTermsRequestEntryAsync(string First_Name, string Last_Name, string Email, string Address1, string Address2, string City, string State, string Zip, string Phone_Number, int account_no, string account_name, string owner_name, string owner_email, int ContactStagingID, string AccountProductLine) {
            this.InsertPayTermsRequestEntryAsync(First_Name, Last_Name, Email, Address1, Address2, City, State, Zip, Phone_Number, account_no, account_name, owner_name, owner_email, ContactStagingID, AccountProductLine, null);
        }
        
        /// <remarks/>
        public void InsertPayTermsRequestEntryAsync(
                    string First_Name, 
                    string Last_Name, 
                    string Email, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string Zip, 
                    string Phone_Number, 
                    int account_no, 
                    string account_name, 
                    string owner_name, 
                    string owner_email, 
                    int ContactStagingID, 
                    string AccountProductLine, 
                    object userState) {
            if ((this.InsertPayTermsRequestEntryOperationCompleted == null)) {
                this.InsertPayTermsRequestEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertPayTermsRequestEntryOperationCompleted);
            }
            this.InvokeAsync("InsertPayTermsRequestEntry", new object[] {
                        First_Name,
                        Last_Name,
                        Email,
                        Address1,
                        Address2,
                        City,
                        State,
                        Zip,
                        Phone_Number,
                        account_no,
                        account_name,
                        owner_name,
                        owner_email,
                        ContactStagingID,
                        AccountProductLine}, this.InsertPayTermsRequestEntryOperationCompleted, userState);
        }
        
        private void OnInsertPayTermsRequestEntryOperationCompleted(object arg) {
            if ((this.InsertPayTermsRequestEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertPayTermsRequestEntryCompleted(this, new InsertPayTermsRequestEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/VerifyPayTermsProfile", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet VerifyPayTermsProfile(int account_no) {
            object[] results = this.Invoke("VerifyPayTermsProfile", new object[] {
                        account_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyPayTermsProfileAsync(int account_no) {
            this.VerifyPayTermsProfileAsync(account_no, null);
        }
        
        /// <remarks/>
        public void VerifyPayTermsProfileAsync(int account_no, object userState) {
            if ((this.VerifyPayTermsProfileOperationCompleted == null)) {
                this.VerifyPayTermsProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyPayTermsProfileOperationCompleted);
            }
            this.InvokeAsync("VerifyPayTermsProfile", new object[] {
                        account_no}, this.VerifyPayTermsProfileOperationCompleted, userState);
        }
        
        private void OnVerifyPayTermsProfileOperationCompleted(object arg) {
            if ((this.VerifyPayTermsProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyPayTermsProfileCompleted(this, new VerifyPayTermsProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/UpdatetPayTermsRequestEntry", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdatetPayTermsRequestEntry(int request_id, string Status, string update_by) {
            object[] results = this.Invoke("UpdatetPayTermsRequestEntry", new object[] {
                        request_id,
                        Status,
                        update_by});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatetPayTermsRequestEntryAsync(int request_id, string Status, string update_by) {
            this.UpdatetPayTermsRequestEntryAsync(request_id, Status, update_by, null);
        }
        
        /// <remarks/>
        public void UpdatetPayTermsRequestEntryAsync(int request_id, string Status, string update_by, object userState) {
            if ((this.UpdatetPayTermsRequestEntryOperationCompleted == null)) {
                this.UpdatetPayTermsRequestEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatetPayTermsRequestEntryOperationCompleted);
            }
            this.InvokeAsync("UpdatetPayTermsRequestEntry", new object[] {
                        request_id,
                        Status,
                        update_by}, this.UpdatetPayTermsRequestEntryOperationCompleted, userState);
        }
        
        private void OnUpdatetPayTermsRequestEntryOperationCompleted(object arg) {
            if ((this.UpdatetPayTermsRequestEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatetPayTermsRequestEntryCompleted(this, new UpdatetPayTermsRequestEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/RetrievePayTermsRequest", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrievePayTermsRequest(int request_id) {
            object[] results = this.Invoke("RetrievePayTermsRequest", new object[] {
                        request_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrievePayTermsRequestAsync(int request_id) {
            this.RetrievePayTermsRequestAsync(request_id, null);
        }
        
        /// <remarks/>
        public void RetrievePayTermsRequestAsync(int request_id, object userState) {
            if ((this.RetrievePayTermsRequestOperationCompleted == null)) {
                this.RetrievePayTermsRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrievePayTermsRequestOperationCompleted);
            }
            this.InvokeAsync("RetrievePayTermsRequest", new object[] {
                        request_id}, this.RetrievePayTermsRequestOperationCompleted, userState);
        }
        
        private void OnRetrievePayTermsRequestOperationCompleted(object arg) {
            if ((this.RetrievePayTermsRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrievePayTermsRequestCompleted(this, new RetrievePayTermsRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/GetOwner", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOwner(float AN8) {
            object[] results = this.Invoke("GetOwner", new object[] {
                        AN8});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOwnerAsync(float AN8) {
            this.GetOwnerAsync(AN8, null);
        }
        
        /// <remarks/>
        public void GetOwnerAsync(float AN8, object userState) {
            if ((this.GetOwnerOperationCompleted == null)) {
                this.GetOwnerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOwnerOperationCompleted);
            }
            this.InvokeAsync("GetOwner", new object[] {
                        AN8}, this.GetOwnerOperationCompleted, userState);
        }
        
        private void OnGetOwnerOperationCompleted(object arg) {
            if ((this.GetOwnerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOwnerCompleted(this, new GetOwnerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/AcceptPayTermsApproval", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AcceptPayTermsApproval(int ID, string IPAddress) {
            this.Invoke("AcceptPayTermsApproval", new object[] {
                        ID,
                        IPAddress});
        }
        
        /// <remarks/>
        public void AcceptPayTermsApprovalAsync(int ID, string IPAddress) {
            this.AcceptPayTermsApprovalAsync(ID, IPAddress, null);
        }
        
        /// <remarks/>
        public void AcceptPayTermsApprovalAsync(int ID, string IPAddress, object userState) {
            if ((this.AcceptPayTermsApprovalOperationCompleted == null)) {
                this.AcceptPayTermsApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAcceptPayTermsApprovalOperationCompleted);
            }
            this.InvokeAsync("AcceptPayTermsApproval", new object[] {
                        ID,
                        IPAddress}, this.AcceptPayTermsApprovalOperationCompleted, userState);
        }
        
        private void OnAcceptPayTermsApprovalOperationCompleted(object arg) {
            if ((this.AcceptPayTermsApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AcceptPayTermsApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/Add_ID_Out", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Add_ID_Out(int CustSkey, string Salutation, string ContactType, string NmFirst, string NmLast, string CityAreaCode, string LocalPhone, string PhoneExt, string EmailAddress, string UserID, string Password, string terms, string ConfirmFlg) {
            object[] results = this.Invoke("Add_ID_Out", new object[] {
                        CustSkey,
                        Salutation,
                        ContactType,
                        NmFirst,
                        NmLast,
                        CityAreaCode,
                        LocalPhone,
                        PhoneExt,
                        EmailAddress,
                        UserID,
                        Password,
                        terms,
                        ConfirmFlg});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Add_ID_OutAsync(int CustSkey, string Salutation, string ContactType, string NmFirst, string NmLast, string CityAreaCode, string LocalPhone, string PhoneExt, string EmailAddress, string UserID, string Password, string terms, string ConfirmFlg) {
            this.Add_ID_OutAsync(CustSkey, Salutation, ContactType, NmFirst, NmLast, CityAreaCode, LocalPhone, PhoneExt, EmailAddress, UserID, Password, terms, ConfirmFlg, null);
        }
        
        /// <remarks/>
        public void Add_ID_OutAsync(int CustSkey, string Salutation, string ContactType, string NmFirst, string NmLast, string CityAreaCode, string LocalPhone, string PhoneExt, string EmailAddress, string UserID, string Password, string terms, string ConfirmFlg, object userState) {
            if ((this.Add_ID_OutOperationCompleted == null)) {
                this.Add_ID_OutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdd_ID_OutOperationCompleted);
            }
            this.InvokeAsync("Add_ID_Out", new object[] {
                        CustSkey,
                        Salutation,
                        ContactType,
                        NmFirst,
                        NmLast,
                        CityAreaCode,
                        LocalPhone,
                        PhoneExt,
                        EmailAddress,
                        UserID,
                        Password,
                        terms,
                        ConfirmFlg}, this.Add_ID_OutOperationCompleted, userState);
        }
        
        private void OnAdd_ID_OutOperationCompleted(object arg) {
            if ((this.Add_ID_OutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Add_ID_OutCompleted(this, new Add_ID_OutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/CustomerPhoneLookup", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CustomerPhoneLookup(string PhoneNo) {
            object[] results = this.Invoke("CustomerPhoneLookup", new object[] {
                        PhoneNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CustomerPhoneLookupAsync(string PhoneNo) {
            this.CustomerPhoneLookupAsync(PhoneNo, null);
        }
        
        /// <remarks/>
        public void CustomerPhoneLookupAsync(string PhoneNo, object userState) {
            if ((this.CustomerPhoneLookupOperationCompleted == null)) {
                this.CustomerPhoneLookupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerPhoneLookupOperationCompleted);
            }
            this.InvokeAsync("CustomerPhoneLookup", new object[] {
                        PhoneNo}, this.CustomerPhoneLookupOperationCompleted, userState);
        }
        
        private void OnCustomerPhoneLookupOperationCompleted(object arg) {
            if ((this.CustomerPhoneLookupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerPhoneLookupCompleted(this, new CustomerPhoneLookupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/AuthenticateDermEdu", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet AuthenticateDermEdu(string UserID, string Password) {
            object[] results = this.Invoke("AuthenticateDermEdu", new object[] {
                        UserID,
                        Password});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateDermEduAsync(string UserID, string Password) {
            this.AuthenticateDermEduAsync(UserID, Password, null);
        }
        
        /// <remarks/>
        public void AuthenticateDermEduAsync(string UserID, string Password, object userState) {
            if ((this.AuthenticateDermEduOperationCompleted == null)) {
                this.AuthenticateDermEduOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateDermEduOperationCompleted);
            }
            this.InvokeAsync("AuthenticateDermEdu", new object[] {
                        UserID,
                        Password}, this.AuthenticateDermEduOperationCompleted, userState);
        }
        
        private void OnAuthenticateDermEduOperationCompleted(object arg) {
            if ((this.AuthenticateDermEduCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateDermEduCompleted(this, new AuthenticateDermEduCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/GetPasswordDermEdu", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPasswordDermEdu(string UserID) {
            object[] results = this.Invoke("GetPasswordDermEdu", new object[] {
                        UserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPasswordDermEduAsync(string UserID) {
            this.GetPasswordDermEduAsync(UserID, null);
        }
        
        /// <remarks/>
        public void GetPasswordDermEduAsync(string UserID, object userState) {
            if ((this.GetPasswordDermEduOperationCompleted == null)) {
                this.GetPasswordDermEduOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPasswordDermEduOperationCompleted);
            }
            this.InvokeAsync("GetPasswordDermEdu", new object[] {
                        UserID}, this.GetPasswordDermEduOperationCompleted, userState);
        }
        
        private void OnGetPasswordDermEduOperationCompleted(object arg) {
            if ((this.GetPasswordDermEduCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPasswordDermEduCompleted(this, new GetPasswordDermEduCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/InsertEventDirectoryEntry", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertEventDirectoryEntry(
                    string First_Name, 
                    string Last_Name, 
                    string Email, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string Zip, 
                    string Phone_Number, 
                    int account_no, 
                    string account_name, 
                    string WebSite_URL, 
                    string WebSite_URL_preview, 
                    int ContactStagingID, 
                    string AccountProductLine, 
                    string Facebook_Page, 
                    string Twitter_Handle, 
                    string Event_Date, 
                    string Event_Time, 
                    string Event_Location, 
                    string Event_City, 
                    string Event_State, 
                    string Event_ZipCode, 
                    string Business_Consultant, 
                    string SpecialPromo) {
            object[] results = this.Invoke("InsertEventDirectoryEntry", new object[] {
                        First_Name,
                        Last_Name,
                        Email,
                        Address1,
                        Address2,
                        City,
                        State,
                        Zip,
                        Phone_Number,
                        account_no,
                        account_name,
                        WebSite_URL,
                        WebSite_URL_preview,
                        ContactStagingID,
                        AccountProductLine,
                        Facebook_Page,
                        Twitter_Handle,
                        Event_Date,
                        Event_Time,
                        Event_Location,
                        Event_City,
                        Event_State,
                        Event_ZipCode,
                        Business_Consultant,
                        SpecialPromo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertEventDirectoryEntryAsync(
                    string First_Name, 
                    string Last_Name, 
                    string Email, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string Zip, 
                    string Phone_Number, 
                    int account_no, 
                    string account_name, 
                    string WebSite_URL, 
                    string WebSite_URL_preview, 
                    int ContactStagingID, 
                    string AccountProductLine, 
                    string Facebook_Page, 
                    string Twitter_Handle, 
                    string Event_Date, 
                    string Event_Time, 
                    string Event_Location, 
                    string Event_City, 
                    string Event_State, 
                    string Event_ZipCode, 
                    string Business_Consultant, 
                    string SpecialPromo) {
            this.InsertEventDirectoryEntryAsync(First_Name, Last_Name, Email, Address1, Address2, City, State, Zip, Phone_Number, account_no, account_name, WebSite_URL, WebSite_URL_preview, ContactStagingID, AccountProductLine, Facebook_Page, Twitter_Handle, Event_Date, Event_Time, Event_Location, Event_City, Event_State, Event_ZipCode, Business_Consultant, SpecialPromo, null);
        }
        
        /// <remarks/>
        public void InsertEventDirectoryEntryAsync(
                    string First_Name, 
                    string Last_Name, 
                    string Email, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string Zip, 
                    string Phone_Number, 
                    int account_no, 
                    string account_name, 
                    string WebSite_URL, 
                    string WebSite_URL_preview, 
                    int ContactStagingID, 
                    string AccountProductLine, 
                    string Facebook_Page, 
                    string Twitter_Handle, 
                    string Event_Date, 
                    string Event_Time, 
                    string Event_Location, 
                    string Event_City, 
                    string Event_State, 
                    string Event_ZipCode, 
                    string Business_Consultant, 
                    string SpecialPromo, 
                    object userState) {
            if ((this.InsertEventDirectoryEntryOperationCompleted == null)) {
                this.InsertEventDirectoryEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertEventDirectoryEntryOperationCompleted);
            }
            this.InvokeAsync("InsertEventDirectoryEntry", new object[] {
                        First_Name,
                        Last_Name,
                        Email,
                        Address1,
                        Address2,
                        City,
                        State,
                        Zip,
                        Phone_Number,
                        account_no,
                        account_name,
                        WebSite_URL,
                        WebSite_URL_preview,
                        ContactStagingID,
                        AccountProductLine,
                        Facebook_Page,
                        Twitter_Handle,
                        Event_Date,
                        Event_Time,
                        Event_Location,
                        Event_City,
                        Event_State,
                        Event_ZipCode,
                        Business_Consultant,
                        SpecialPromo}, this.InsertEventDirectoryEntryOperationCompleted, userState);
        }
        
        private void OnInsertEventDirectoryEntryOperationCompleted(object arg) {
            if ((this.InsertEventDirectoryEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertEventDirectoryEntryCompleted(this, new InsertEventDirectoryEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/RetrieveEventDirectory", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveEventDirectory(string email, int account_no) {
            object[] results = this.Invoke("RetrieveEventDirectory", new object[] {
                        email,
                        account_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveEventDirectoryAsync(string email, int account_no) {
            this.RetrieveEventDirectoryAsync(email, account_no, null);
        }
        
        /// <remarks/>
        public void RetrieveEventDirectoryAsync(string email, int account_no, object userState) {
            if ((this.RetrieveEventDirectoryOperationCompleted == null)) {
                this.RetrieveEventDirectoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveEventDirectoryOperationCompleted);
            }
            this.InvokeAsync("RetrieveEventDirectory", new object[] {
                        email,
                        account_no}, this.RetrieveEventDirectoryOperationCompleted, userState);
        }
        
        private void OnRetrieveEventDirectoryOperationCompleted(object arg) {
            if ((this.RetrieveEventDirectoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveEventDirectoryCompleted(this, new RetrieveEventDirectoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/RetrieveEventDirectoryByID", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveEventDirectoryByID(int event_id) {
            object[] results = this.Invoke("RetrieveEventDirectoryByID", new object[] {
                        event_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveEventDirectoryByIDAsync(int event_id) {
            this.RetrieveEventDirectoryByIDAsync(event_id, null);
        }
        
        /// <remarks/>
        public void RetrieveEventDirectoryByIDAsync(int event_id, object userState) {
            if ((this.RetrieveEventDirectoryByIDOperationCompleted == null)) {
                this.RetrieveEventDirectoryByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveEventDirectoryByIDOperationCompleted);
            }
            this.InvokeAsync("RetrieveEventDirectoryByID", new object[] {
                        event_id}, this.RetrieveEventDirectoryByIDOperationCompleted, userState);
        }
        
        private void OnRetrieveEventDirectoryByIDOperationCompleted(object arg) {
            if ((this.RetrieveEventDirectoryByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveEventDirectoryByIDCompleted(this, new RetrieveEventDirectoryByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/RetrieveDermCircleBanner", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveDermCircleBanner(int account_no) {
            object[] results = this.Invoke("RetrieveDermCircleBanner", new object[] {
                        account_no});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveDermCircleBannerAsync(int account_no) {
            this.RetrieveDermCircleBannerAsync(account_no, null);
        }
        
        /// <remarks/>
        public void RetrieveDermCircleBannerAsync(int account_no, object userState) {
            if ((this.RetrieveDermCircleBannerOperationCompleted == null)) {
                this.RetrieveDermCircleBannerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveDermCircleBannerOperationCompleted);
            }
            this.InvokeAsync("RetrieveDermCircleBanner", new object[] {
                        account_no}, this.RetrieveDermCircleBannerOperationCompleted, userState);
        }
        
        private void OnRetrieveDermCircleBannerOperationCompleted(object arg) {
            if ((this.RetrieveDermCircleBannerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveDermCircleBannerCompleted(this, new RetrieveDermCircleBannerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/EncryptCrypto", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EncryptCrypto(string strDecryptedText) {
            object[] results = this.Invoke("EncryptCrypto", new object[] {
                        strDecryptedText});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EncryptCryptoAsync(string strDecryptedText) {
            this.EncryptCryptoAsync(strDecryptedText, null);
        }
        
        /// <remarks/>
        public void EncryptCryptoAsync(string strDecryptedText, object userState) {
            if ((this.EncryptCryptoOperationCompleted == null)) {
                this.EncryptCryptoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEncryptCryptoOperationCompleted);
            }
            this.InvokeAsync("EncryptCrypto", new object[] {
                        strDecryptedText}, this.EncryptCryptoOperationCompleted, userState);
        }
        
        private void OnEncryptCryptoOperationCompleted(object arg) {
            if ((this.EncryptCryptoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EncryptCryptoCompleted(this, new EncryptCryptoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dermalogica.com/webservices/DecryptCrypto", RequestNamespace="http://dermalogica.com/webservices/", ResponseNamespace="http://dermalogica.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DecryptCrypto(string strEncryptedText) {
            object[] results = this.Invoke("DecryptCrypto", new object[] {
                        strEncryptedText});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DecryptCryptoAsync(string strEncryptedText) {
            this.DecryptCryptoAsync(strEncryptedText, null);
        }
        
        /// <remarks/>
        public void DecryptCryptoAsync(string strEncryptedText, object userState) {
            if ((this.DecryptCryptoOperationCompleted == null)) {
                this.DecryptCryptoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDecryptCryptoOperationCompleted);
            }
            this.InvokeAsync("DecryptCrypto", new object[] {
                        strEncryptedText}, this.DecryptCryptoOperationCompleted, userState);
        }
        
        private void OnDecryptCryptoOperationCompleted(object arg) {
            if ((this.DecryptCryptoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DecryptCryptoCompleted(this, new DecryptCryptoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AuthenticateCompletedEventHandler(object sender, AuthenticateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CustomerLookupCompletedEventHandler(object sender, CustomerLookupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerLookupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerLookupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCompletedEventHandler(object sender, GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserIdCompletedEventHandler(object sender, GetUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPasswordCompletedEventHandler(object sender, GetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDermDollarHeaderCompletedEventHandler(object sender, GetDermDollarHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDermDollarHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDermDollarHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDermDollarDetailCompletedEventHandler(object sender, GetDermDollarDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDermDollarDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDermDollarDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAccountAddressCompletedEventHandler(object sender, GetAccountAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateBCCounterCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateBCReferralSiteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateTermsConditionsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyAccountStatusCompletedEventHandler(object sender, VerifyAccountStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyAccountStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyAccountStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RetrieveB2BRequestCompletedEventHandler(object sender, RetrieveB2BRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveB2BRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveB2BRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RetrieveB2BRequestByEmailCompletedEventHandler(object sender, RetrieveB2BRequestByEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveB2BRequestByEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveB2BRequestByEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RetrieveBCEmailCompletedEventHandler(object sender, RetrieveBCEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveBCEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveBCEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyB2BProfileCompletedEventHandler(object sender, VerifyB2BProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyB2BProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyB2BProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RetrieveE2WUserCompletedEventHandler(object sender, RetrieveE2WUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveE2WUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveE2WUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RetrieveE2WUserByAn8CompletedEventHandler(object sender, RetrieveE2WUserByAn8CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveE2WUserByAn8CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveE2WUserByAn8CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateE2WUserCompletedEventHandler(object sender, UpdateE2WUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateE2WUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateE2WUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateNetTermsCompletedEventHandler(object sender, UpdateNetTermsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateNetTermsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateNetTermsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetBCUsersByAN8CompletedEventHandler(object sender, GetBCUsersByAN8CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBCUsersByAN8CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBCUsersByAN8CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdatetB2BRequestEntryCompletedEventHandler(object sender, UpdatetB2BRequestEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatetB2BRequestEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatetB2BRequestEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InsertB2BRequestToERPCompletedEventHandler(object sender, InsertB2BRequestToERPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertB2BRequestToERPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertB2BRequestToERPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InsertB2BRequestEntryCompletedEventHandler(object sender, InsertB2BRequestEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertB2BRequestEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertB2BRequestEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateEncryptedPasswordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetBCUsersCompletedEventHandler(object sender, GetBCUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBCUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBCUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InsertB2CRequestEntryCompletedEventHandler(object sender, InsertB2CRequestEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertB2CRequestEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertB2CRequestEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InsertB2CRequestEntry_ssCompletedEventHandler(object sender, InsertB2CRequestEntry_ssCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertB2CRequestEntry_ssCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertB2CRequestEntry_ssCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RetrieveB2CRequestCompletedEventHandler(object sender, RetrieveB2CRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveB2CRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveB2CRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RetrieveB2CRequestByEmailCompletedEventHandler(object sender, RetrieveB2CRequestByEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveB2CRequestByEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveB2CRequestByEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdatetB2CRequestEntryCompletedEventHandler(object sender, UpdatetB2CRequestEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatetB2CRequestEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatetB2CRequestEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyB2CProfileCompletedEventHandler(object sender, VerifyB2CProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyB2CProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyB2CProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyB2CProfileByAn8ProdCompletedEventHandler(object sender, VerifyB2CProfileByAn8ProdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyB2CProfileByAn8ProdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyB2CProfileByAn8ProdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InsertAffiliateRequestEntryCompletedEventHandler(object sender, InsertAffiliateRequestEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertAffiliateRequestEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertAffiliateRequestEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyAffiliateProfileCompletedEventHandler(object sender, VerifyAffiliateProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyAffiliateProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyAffiliateProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyAffiliateProfileByAn8ProdCompletedEventHandler(object sender, VerifyAffiliateProfileByAn8ProdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyAffiliateProfileByAn8ProdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyAffiliateProfileByAn8ProdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InsertAffiliateRequestEntry_ssCompletedEventHandler(object sender, InsertAffiliateRequestEntry_ssCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertAffiliateRequestEntry_ssCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertAffiliateRequestEntry_ssCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyAffiliateProfile_SSCompletedEventHandler(object sender, VerifyAffiliateProfile_SSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyAffiliateProfile_SSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyAffiliateProfile_SSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyAffiliateProfileByAn8Prod_SSCompletedEventHandler(object sender, VerifyAffiliateProfileByAn8Prod_SSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyAffiliateProfileByAn8Prod_SSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyAffiliateProfileByAn8Prod_SSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdatetAffiliateRequestEntryCompletedEventHandler(object sender, UpdatetAffiliateRequestEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatetAffiliateRequestEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatetAffiliateRequestEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RetrieveAffiliateRequestCompletedEventHandler(object sender, RetrieveAffiliateRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAffiliateRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveAffiliateRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Insert_SalonServ_BusinessCenterCompletedEventHandler(object sender, Insert_SalonServ_BusinessCenterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insert_SalonServ_BusinessCenterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insert_SalonServ_BusinessCenterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Update_SalonServ_BusinessCenterCompletedEventHandler(object sender, Update_SalonServ_BusinessCenterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Update_SalonServ_BusinessCenterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Update_SalonServ_BusinessCenterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Retrieve_SalonServ_BusinessCenterCompletedEventHandler(object sender, Retrieve_SalonServ_BusinessCenterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Retrieve_SalonServ_BusinessCenterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Retrieve_SalonServ_BusinessCenterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Retrieve_SalonServ_CustMasterCompletedEventHandler(object sender, Retrieve_SalonServ_CustMasterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Retrieve_SalonServ_CustMasterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Retrieve_SalonServ_CustMasterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Retrieve_SalonServ_BusinessCenter_EmailCompletedEventHandler(object sender, Retrieve_SalonServ_BusinessCenter_EmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Retrieve_SalonServ_BusinessCenter_EmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Retrieve_SalonServ_BusinessCenter_EmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Retrieve_SalonServ_BusinessCenter_Email_PasswordCompletedEventHandler(object sender, Retrieve_SalonServ_BusinessCenter_Email_PasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Retrieve_SalonServ_BusinessCenter_Email_PasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Retrieve_SalonServ_BusinessCenter_Email_PasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Update_SalonServices_BusinessCenter_CounterCompletedEventHandler(object sender, Update_SalonServices_BusinessCenter_CounterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Update_SalonServices_BusinessCenter_CounterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Update_SalonServices_BusinessCenter_CounterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Retrieve_Payterms_ExistCompletedEventHandler(object sender, Retrieve_Payterms_ExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Retrieve_Payterms_ExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Retrieve_Payterms_ExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InsertPayTermsRequestEntryCompletedEventHandler(object sender, InsertPayTermsRequestEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertPayTermsRequestEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertPayTermsRequestEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyPayTermsProfileCompletedEventHandler(object sender, VerifyPayTermsProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyPayTermsProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyPayTermsProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdatetPayTermsRequestEntryCompletedEventHandler(object sender, UpdatetPayTermsRequestEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatetPayTermsRequestEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatetPayTermsRequestEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RetrievePayTermsRequestCompletedEventHandler(object sender, RetrievePayTermsRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrievePayTermsRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrievePayTermsRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetOwnerCompletedEventHandler(object sender, GetOwnerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOwnerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOwnerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AcceptPayTermsApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Add_ID_OutCompletedEventHandler(object sender, Add_ID_OutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Add_ID_OutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Add_ID_OutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CustomerPhoneLookupCompletedEventHandler(object sender, CustomerPhoneLookupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerPhoneLookupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerPhoneLookupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AuthenticateDermEduCompletedEventHandler(object sender, AuthenticateDermEduCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateDermEduCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateDermEduCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPasswordDermEduCompletedEventHandler(object sender, GetPasswordDermEduCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPasswordDermEduCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPasswordDermEduCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InsertEventDirectoryEntryCompletedEventHandler(object sender, InsertEventDirectoryEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertEventDirectoryEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertEventDirectoryEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RetrieveEventDirectoryCompletedEventHandler(object sender, RetrieveEventDirectoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveEventDirectoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveEventDirectoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RetrieveEventDirectoryByIDCompletedEventHandler(object sender, RetrieveEventDirectoryByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveEventDirectoryByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveEventDirectoryByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RetrieveDermCircleBannerCompletedEventHandler(object sender, RetrieveDermCircleBannerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveDermCircleBannerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveDermCircleBannerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EncryptCryptoCompletedEventHandler(object sender, EncryptCryptoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EncryptCryptoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EncryptCryptoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DecryptCryptoCompletedEventHandler(object sender, DecryptCryptoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DecryptCryptoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DecryptCryptoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591